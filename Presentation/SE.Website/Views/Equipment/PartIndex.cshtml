@model PartListPageModel
@{
    ViewBag.Title = Model.Title;
}
<div class="search-action" style="margin-top: 30px;">
    <button class="btn btn-default" command-name="add" command-url="@Model.AddItemUrl">新增</button>
</div>
<div class="search-result table-responsive" style="margin-top: 10px;">
</div>
<div class="module-add">
    @Html.Partial("_Modal", new ModalModel<PartAddModel> { Title = "新增部件" })
</div>
<div class="module-update">
    @Html.Partial("_Modal", new ModalModel<PartUpdateModel> { Title = "编辑部件" })
</div>
<div class="module-sms">
    @Html.Partial("_Modal", new ModalModel<PartSmsEditModel> { Title = "短信设置" })
</div>
@section scripts{
    <script src="~/Scripts/views/base/se.ui.view.SearchViewBase.js"></script>
    <script>
        var viewInstance = new se.ui.view.SearchViewBase(new se.ui.view.SearchViewBase.Settings({
            url: '@Model.RequestListUrl',
            modules: {
                add: new se.ui.module.Dialog(new se.ui.module.Dialog.Settings({
                    container: $(".module-add .modal"),
                    initializer: function () {

                    },
                    viewModelSetter: function (vm) {
                        vm.bind("change", function (item) {
                            if (item.field == "MachineSet") {
                                if (vm.MachineSet) {
                                    $.getJSON("/Equipment/Get", { MachineSet: vm.MachineSet }, function (data) {
                                        vm.set("EquipmentIds", data);
                                    });
                                }
                                else {
                                    vm.set("EquipmentIds", []);
                                }
                            }
                        });
                    }
                })),
                sms: new se.ui.module.Dialog(new se.ui.module.Dialog.Settings({
                    container: $(".module-sms .modal")
                })),
                update: new se.ui.module.Dialog(new se.ui.module.Dialog.Settings({
                    container: $(".module-update .modal"),
                    initializer: function () {

                    },
                    viewModelSetter: function (vm) {
                        vm.bind("change", function (item) {
                            if (item.field == "MachineSet") {
                                if (vm.MachineSet) {
                                    $.getJSON("/Equipment/Get", { MachineSet: vm.MachineSet }, function (data) {
                                        vm.set("EquipmentIds", data);
                                    });
                                }
                                else {
                                    vm.set("EquipmentIds", []);
                                }
                            }
                        });
                    }
                }))
            },
            rowCommands: {
                update: function (model) {
                    $.getJSON("/Equipment/Get", { MachineSet: model.MachineSet }, function (data) {
                        model.EquipmentIds = data;
                        viewInstance.modules.update.dialog.show();
                        viewInstance.modules.update.bindModel(model);
                    });
                },
                remove: function (model) {
                    var container = $(this).closest(".table");
                    se.helper.ajax.request({
                        confirmMessage: "您确定删除 " + model.Name + " 吗？",
                        container: container,
                        url: "/Equipment/PartDelete",
                        model: { Id: model.Id },
                        onSuccess: function () {
                            viewInstance.refresh();
                        }
                    });
                },
                sms: function (model) {
                    $.getJSON("/Equipment/PartSmsGet", { Id: model.Id }, function (data) {
                        var sms = data || { PartId: model.Id };
                        viewInstance.modules.sms.dialog.show();
                        viewInstance.modules.sms.bindModel(sms);
                    });
                }
            },
            viewCommands: {
                add: function (model) {
                    viewInstance.modules.add.dialog.show();
                    viewInstance.modules.add.bindModel({ SendSms: false, EquipmentIds: [] });
                }
            }
        }));
        viewInstance.init();
        viewInstance.modules.add.on("saved", function () { viewInstance.refresh(); });
        viewInstance.modules.update.on("saved", function () { viewInstance.refresh(); });
    </script>
}