@model PartListPageModel
@{
    ViewBag.Title = Model.Title;
}
<div class="search-criteria" style="padding: 20px 0; border-bottom: 1px dotted #e2e2e2">
    <form class="form-inline" role="form">
        <div class="form-group">
            <label class="control-label">机组</label>
            @Html.Raw(new NativeSelect("MachineSet", true, false) { Source = new EnumControlSourceAttribute(typeof(MachineSetType)).GetSource(), SelectedValue = "", EmptyPair = new NameValuePair { Name = "全部" } }.Render())
        </div> 
        <div class="form-group">
            <label class="control-label">设备</label>
            <input type="text" name="EquipmentName" class="form-control input-sm " />
        </div>
        <div class="form-group">
            <label class="control-label">部件</label>
            <input type="text" name="PartName" class="form-control input-sm " />
        </div>
        <div class="form-group">
            <label class="control-label">添加人</label>
            <input type="text" name="UserName" class="form-control input-sm " />
        </div>
        <div class="form-group">
            <button type="button" role="search" class="btn btn-primary btn-sm">查询</button>
        </div>
    </form>
</div>
<div class="search-action" style="margin-top: 30px;">
    <button class="btn btn-default" command-name="add" command-url="@Model.AddItemUrl">新增</button>
</div>
<div class="search-result table-responsive" style="margin-top: 10px;">
</div>
<div class="module-add">
    @Html.Partial("_Modal", new ModalModel<PartAddModel> { Title = "新增部件" })
</div>
<div class="module-update">
    @Html.Partial("_Modal", new ModalModel<PartUpdateModel> { Title = "编辑部件" })
</div>
<div class="module-sms">
    @Html.Partial("_Modal", new ModalModel<PartSmsEditModel> { Title = "短信设置" })
</div>
@section scripts{
    <script src="~/Scripts/views/base/se.ui.view.SearchViewBase.js"></script>
    <script>
        var viewInstance = new se.ui.view.SearchViewBase(new se.ui.view.SearchViewBase.Settings({
            url: '@Model.RequestListUrl',
            modules: {
                add: new se.ui.module.Dialog(new se.ui.module.Dialog.Settings({
                    container: $(".module-add .modal"),
                    viewModelSetter: function (vm) {
                        vm.bind("change", function (item) {
                            if (item.field == "MachineSet") {
                                if (vm.MachineSet) {
                                    $.getJSON("/Equipment/Get", { MachineSet: vm.MachineSet }, function (data) {
                                        vm.set("EquipmentIds", data);
                                    });
                                }
                                else {
                                    vm.set("EquipmentIds", []);
                                }
                            } else if (item.field == "SendSms") {
                                if (vm.SendSms == "true") {
                                    $("[property-name='UltraNum']", $(".module-add .modal")).attr("validate-rule", "required:true");
                                } else {
                                    $("[property-name='UltraNum']", $(".module-add .modal")).removeAttr("validate-rule");
                                }
                            }
                        });
                    }
                })),
                sms: new se.ui.module.Dialog(new se.ui.module.Dialog.Settings({
                    container: $(".module-sms .modal")
                })),
                update: new se.ui.module.Dialog(new se.ui.module.Dialog.Settings({
                    container: $(".module-update .modal"),
                    viewModelSetter: function (vm) {
                        vm.bind("change", function (item) {
                            if (item.field == "MachineSet") {
                                if (vm.MachineSet) {
                                    $.getJSON("/Equipment/Get", { MachineSet: vm.MachineSet }, function (data) {
                                        vm.set("EquipmentIds", data);
                                    });
                                }
                                else {
                                    vm.set("EquipmentIds", []);
                                }
                            } else if (item.field == "SendSms") {
                                if (vm.SendSms == "true") {
                                    $("[property-name='UltraNum']", $(".module-update .modal")).attr("validate-rule", "required:true");
                                } else {
                                    $("[property-name='UltraNum']", $(".module-update .modal")).removeAttr("validate-rule");
                                }
                            }
                        });
                    }
                }))
            },
            rowCommands: {
                update: function (model) {
                    $.getJSON("/Equipment/Get", { MachineSet: model.MachineSet }, function (data) {
                        model.EquipmentIds = data;
                        viewInstance.modules.update.dialog.show();
                        viewInstance.modules.update.bindModel(model);
                    });
                },
                state: function (model) {
                    var container = $(this).closest(".table");
                    se.helper.ajax.request({
                        confirmMessage: "您确定修改 " + model.Name + " 的状态吗？",
                        container: container,
                        url: "/Equipment/PartState",
                        model: { Id: model.Id },
                        onSuccess: function (response) {
                            viewInstance.refresh();
                        }
                    });
                },
                remove: function (model) {
                    var container = $(this).closest(".table");
                    se.helper.ajax.request({
                        confirmMessage: "您确定删除 " + model.Name + " 吗？",
                        container: container,
                        url: "/Equipment/TryPartDelete",
                        model: { Id: model.Id },
                        onSuccess: function (response) {
                            viewInstance.refresh();
                        },
                        onFailure: function (response) {
                            if (response.Code == 1) {
                                se.helper.ajax.request({
                                    confirmMessage: "该部件已有超限记录存在，请确定是否要删除？",
                                    container: container,
                                    url: "/Equipment/PartDelete",
                                    model: { Id: model.Id },
                                    onSuccess: function (response) {
                                        viewInstance.refresh();
                                    },
                                    onFailure: function (response) {
                                        bootbox.alert(response.Message);
                                    }
                                });
                            }
                        }
                    });
                },
                sms: function (model) {
                    $.getJSON("/Equipment/PartSmsGet", { Id: model.Id }, function (data) {
                        var sms = data || { PartId: model.Id };
                        viewInstance.modules.sms.dialog.show();
                        viewInstance.modules.sms.bindModel(sms);
                    });
                }
            },
            viewCommands: {
                add: function (model) {
                    $("[property-name='UltraNum']", $(".module-add .modal")).removeAttr("validate-rule");
                    viewInstance.modules.add.dialog.show();
                    viewInstance.modules.add.bindModel({ SendSms: false, EquipmentIds: [] });
                }
            }
        }));
        viewInstance.init();
        viewInstance.modules.add.on("saved", function () { viewInstance.refresh(); });
        viewInstance.modules.update.on("saved", function () { viewInstance.refresh(); });
    </script>
}