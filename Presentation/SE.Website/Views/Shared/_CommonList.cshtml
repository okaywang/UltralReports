@model PagedModel<AccountListItemModel>
@{
    if (Model.Items.Any())
    {
        var itemType = Model.Items.First().GetType();
        var props = itemType.GetProperties().Where(p => p.CustomAttributes.Any(i => i.AttributeType == typeof(System.ComponentModel.DisplayNameAttribute))).ToList();

    <div class="search-result-table">
        <table class="table table-striped table-bordered table-hover">
            <thead>
                <tr>
                    @foreach (var prop in props)
                    {
                        <td>@prop.GetDisplayName()</td>    
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items)
                {
                    <tr model-field-entry="AccountId:@item.AccountId,LoginName:'@item.LoginName'">
                        @foreach (var prop in props)
                        {
                            <td>
                                @if (prop.PropertyType.Name == "IListItemCommand[]")
                                {
                                    var commands = prop.GetValue(item) as IListItemCommand[];
                                    foreach (var cmd in commands)
                                    {
                                        <a href="javascript:;" url="@cmd.CommandAction" command-name="@cmd.CommandName">@cmd.CommandText</a>
                                    }
                                }
                                else
                                {
                                    @prop.GetFormatedString(item)
                                }
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
    }
}
<div class="search-result-pagination">
    @Html.Partial("_Pager", Model.PagingResult)
</div>
