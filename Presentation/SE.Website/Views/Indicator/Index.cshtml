@{
    ViewBag.Title = "小指标单项得分明细";
}
@model KPIListPageModel
@section styles{
    <style>
        .search-result-table table th {
            width: 100px;
            background-image: url("");
        }
    </style>
}

<div class="search-criteria" style="padding: 20px 0; border-bottom: 1px dotted #e2e2e2">
    <form class="form-inline" role="form" action="/Indicator/Index">
        <div class="form-group">
            <label class="control-label">开始时间</label>
            <div class="input-group date">
                <input type="text" name="beginDate" class="form-control input-sm datetime" value="@this.Request.QueryString["beginDate"]" />
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label">结束时间</label>
            <div class="input-group date">
                <input type="text" name="endDate" class="form-control input-sm datetime" value="@this.Request.QueryString["endDate"]" />
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
        <div class="form-group">
            <button type="submit" role="search" class="btn btn-primary btn-sm">查询</button>
        </div>
    </form>
</div>
<div class="search-result table-responsive" style="margin-top: 10px;">
    <div class="search-result-table">
        <table class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>值次</th>
                    <th colspan="2">#1机主汽温越限</th>
                    <th colspan="2">#1机再热汽温越限</th>
                    <th colspan="2">#1机主汽温限内偏差</th>
                    <th colspan="2">#1机再热汽温限内偏差</th>
                    <th colspan="2">#1机排烟损失</th>
                    <th colspan="2">#1机管壁超温</th>
                    <th colspan="2">#1机氨单耗</th>
                    <th colspan="2">综合厂用电率</th>
                    <th colspan="2">#1负荷完成率</th>
                    <th>掺烧率</th>
                    <th>积分</th>
                    <th></th>
                </tr>
                <tr>
                    <th>权重</th>
                    @{
                        var dictWeight = Model.Weights.ToDictionary(i => i.ItemType);
                        var dataGroup = Model.Data.GroupBy(i => i.PointKey).Select(i => new { key = i.Key, Max = i.Max(p => p.Value), Min = i.Min(p => p.Value) }).ToDictionary(i => i.key);
                        var colsA = new[] { "A1", "A2", "A3", "A4", "A5", "A6", "A7", "A8", "A9", "A10" };
                        var additionA = new[] { 0m, 0m, 0m, 0m, 6m, 0m, 3m, 10m, 5m };
                        var additionB = new[] { 0m, 0m, 0m, 0m, 6m, 0m, 3m, 5m, 5m };
                        var colsB = new[] { "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9" };
                        var dictKpiGroupInfo = new Dictionary<string, KpiGroupInfo>();
                    }
                    @for (int i = 1; i <= colsA.Length - 1; i++)
                    {
                        var weight = dictWeight.ContainsKey(i) ? dictWeight[i].Weight : 0;
                        var key = "A" + i.ToString();
                        var max = dataGroup.ContainsKey(key) ? dataGroup[key].Max : 0;
                        var min = dataGroup.ContainsKey(key) ? dataGroup[key].Min : 0;
                        var delta = max - min == 0 ? decimal.MaxValue : weight / (max - min);
                        dictKpiGroupInfo.Add(key, new KpiGroupInfo { Max = max, Delta = delta, Addition = additionA[i - 1] });
                        <th colspan="2" max="@max" delta="@delta">@weight</th>
                    }
                    <th></th>
                    <th>#1机</th>
                    <th>值际</th>
                </tr>
            </thead>
            <tbody>
                @{
                    var dict = Model.Data.ToDictionary(i => string.Format("{0}{1}", (int)i.Duty, i.PointKey));
                }
                <tr>
                    <td>一值</td>
                    @for (int i = 0; i < colsA.Length; i++)
                    {

                        var subKey = colsA[i];
                        var key = "1" + subKey;
                        var val = dict.ContainsKey(key) ? dict[key].Value : 0.00m;
                        var info = dictKpiGroupInfo.ContainsKey(subKey) ? dictKpiGroupInfo[subKey] : null;
                        <td>@val</td>

                        <td>
                            @if (info != null && info.Delta != decimal.MaxValue)
                            {
                                var v = (info.Max - val) * info.Delta + info.Addition;
                                @(v.ToString("0.00"))
                            }
                        </td>
                    }
                    <td></td>
                </tr>
                <tr>
                    <td>二值</td>
                    @for (int i = 0; i < colsA.Length; i++)
                    {
                        var subKey = colsA[i];
                        var key = "2" + subKey;
                        var val = dict.ContainsKey(key) ? dict[key].Value : 0.00m;
                        var info = dictKpiGroupInfo.ContainsKey(subKey) ? dictKpiGroupInfo[subKey] : null;
                        <td>@val</td>

                        <td>
                            @if (info != null && info.Delta != decimal.MaxValue)
                            {
                                var v = (info.Max - val) * info.Delta + info.Addition;
                                @(v.ToString("0.00"))
                            }
                        </td>
                    }
                    <td></td>
                </tr>
                <tr>
                    <td>三值</td>
                    @for (int i = 0; i < colsA.Length; i++)
                    {
                        var subKey = colsA[i];
                        var key = "3" + subKey;
                        var val = dict.ContainsKey(key) ? dict[key].Value : 0.00m;
                        var info = dictKpiGroupInfo.ContainsKey(subKey) ? dictKpiGroupInfo[subKey] : null;
                        <td>@val</td>

                        <td>
                            @if (info != null && info.Delta != decimal.MaxValue)
                            {
                                var v = (info.Max - val) * info.Delta + info.Addition;
                                @(v.ToString("0.00"))
                            }
                        </td>
                    }
                    <td></td>
                </tr>
                <tr>
                    <td>四值</td>
                    @for (int i = 0; i < colsA.Length; i++)
                    {
                        var subKey = colsA[i];
                        var key = "4" + subKey;
                        var val = dict.ContainsKey(key) ? dict[key].Value : 0.00m;
                        var info = dictKpiGroupInfo.ContainsKey(subKey) ? dictKpiGroupInfo[subKey] : null;
                        <td>@val</td>

                        <td>
                            @if (info != null && info.Delta != decimal.MaxValue)
                            {
                                var v = (info.Max - val) * info.Delta + info.Addition;
                                @(v.ToString("0.00"))
                            }
                        </td>
                    }
                    <td></td>
                </tr>
                <tr>
                    <td>五值</td>
                    @for (int i = 0; i < colsA.Length; i++)
                    {
                        var subKey = colsA[i];
                        var key = "5" + subKey;
                        var val = dict.ContainsKey(key) ? dict[key].Value : 0.00m;
                        var info = dictKpiGroupInfo.ContainsKey(subKey) ? dictKpiGroupInfo[subKey] : null;
                        <td>@val</td>

                        <td>
                            @if (info != null && info.Delta != decimal.MaxValue)
                            {
                                var v = (info.Max - val) * info.Delta + info.Addition;
                                @(v.ToString("0.00"))
                            }
                        </td>
                    }
                    <td></td>
                </tr>
                <tr>
                    <td colspan="22"></td>
                </tr>
            </tbody>

            <thead>
                <tr>
                    <th>值次</th>
                    <th colspan="2">#2机主汽温越限</th>
                    <th colspan="2">#2机再热汽温越限</th>
                    <th colspan="2">#2机主汽温限内偏差</th>
                    <th colspan="2">#2机再热汽温限内偏差</th>
                    <th colspan="2">#2机排烟损失</th>
                    <th colspan="2">#2机管壁超温</th>
                    <th colspan="2">#2机氨单耗</th>
                    <th colspan="2">全厂负荷完成率</th>
                    <th colspan="2">#2负荷完成率</th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
                <tr>
                    <th>权重</th>
                    @{
                        var weightType = new[] { 1, 2, 3, 4, 5, 6, 7, 10, 9 };
                    }
                    @for (int i = 0; i < weightType.Length; i++)
                    {
                        var weight = dictWeight.ContainsKey(weightType[i]) ? dictWeight[weightType[i]].Weight : 0;
                        var key = "B" + (i + 1).ToString();
                        var max = dataGroup.ContainsKey(key) ? dataGroup[key].Max : 0;
                        var min = dataGroup.ContainsKey(key) ? dataGroup[key].Min : 0;
                        var delta = max - min == 0 ? decimal.MaxValue : weight / (max - min);
                        dictKpiGroupInfo.Add(key, new KpiGroupInfo { Max = max, Delta = delta, Addition = additionB[i] });
                        <th colspan="2" max="@max" delta="@delta">@weight</th>
                    }
                    <th></th>
                    <th>#2机</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>一值</td>
                    @for (int i = 0; i < colsB.Length; i++)
                    {
                        var subKey = colsB[i];
                        var key = "1" + subKey;
                        var val = dict.ContainsKey(key) ? dict[key].Value : 0.00m;
                        var info = dictKpiGroupInfo.ContainsKey(subKey) ? dictKpiGroupInfo[subKey] : null;
                        <td>@val</td>

                        <td>
                            @if (info != null && info.Delta != decimal.MaxValue)
                            {
                                @(((info.Max - val) * info.Delta + info.Addition).ToString("0.00"))
                            }
                        </td>
                    }
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td>二值</td>
                    @for (int i = 0; i < colsB.Length; i++)
                    {
                        var subKey = colsB[i];
                        var key = "2" + subKey;
                        var val = dict.ContainsKey(key) ? dict[key].Value : 0.00m;
                        var info = dictKpiGroupInfo.ContainsKey(subKey) ? dictKpiGroupInfo[subKey] : null;
                        <td>@val</td>

                        <td>
                            @if (info != null && info.Delta != decimal.MaxValue)
                            {
                                @(((info.Max - val) * info.Delta + info.Addition).ToString("0.00"))
                            }
                        </td>
                    }
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td>三值</td>
                    @for (int i = 0; i < colsB.Length; i++)
                    {
                        var subKey = colsB[i];
                        var key = "3" + subKey;
                        var val = dict.ContainsKey(key) ? dict[key].Value : 0.00m;
                        var info = dictKpiGroupInfo.ContainsKey(subKey) ? dictKpiGroupInfo[subKey] : null;
                        <td>@val</td>

                        <td>
                            @if (info != null && info.Delta != decimal.MaxValue)
                            {
                                @(((info.Max - val) * info.Delta + info.Addition).ToString("0.00"))
                            }
                        </td>
                    }
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td>四值</td>
                    @for (int i = 0; i < colsB.Length; i++)
                    {
                        var subKey = colsB[i];
                        var key = "4" + subKey;
                        var val = dict.ContainsKey(key) ? dict[key].Value : 0.00m;
                        var info = dictKpiGroupInfo.ContainsKey(subKey) ? dictKpiGroupInfo[subKey] : null;
                        <td>@val</td>

                        <td>
                            @if (info != null && info.Delta != decimal.MaxValue)
                            {
                                @(((info.Max - val) * info.Delta + info.Addition).ToString("0.00"))
                            }
                        </td>
                    }
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td>五值</td>
                    @for (int i = 0; i < colsB.Length; i++)
                    {
                        var subKey = colsB[i];
                        var key = "5" + subKey;
                        var val = dict.ContainsKey(key) ? dict[key].Value : 0.00m;
                        var info = dictKpiGroupInfo.ContainsKey(subKey) ? dictKpiGroupInfo[subKey] : null;
                        <td>@val</td>

                        <td>
                            @if (info != null && info.Delta != decimal.MaxValue)
                            {
                                @(((info.Max - val) * info.Delta + info.Addition).ToString("0.00"))
                            }
                        </td>
                    }
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>


@section scripts{
    <script src="~/Scripts/moment.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <script src="~/Scripts/views/base/se.ui.view.SearchViewBase.js"></script>
    <script>

        //var viewInstance = new se.ui.view.SearchViewBase(new se.ui.view.SearchViewBase.Settings({
        //    url: ''
        //}));
        //viewInstance.init();


        $(function () {
            $(".date .form-control").datetimepicker({
                format: 'YYYY-MM-DD',

            });
            $("[role=search]").click(function () {

            });
            $("tbody tr td:nth-child(21)").each(function (index, item) {
                var tr = $($(item).parent());
                var val = tr.find("td:eq(2)").text() * 1 + tr.find("td:eq(4)").text() * 1 + tr.find("td:eq(6)").text() * 1
                        + tr.find("td:eq(8)").text() * 1 + tr.find("td:eq(10)").text() * 1 + tr.find("td:eq(12)").text() * 1
                        + tr.find("td:eq(14)").text() * 1;
                $(item).text(val.toFixed(2));
            });
            $("tbody:eq(0) tr td:nth-child(22)").each(function (index, item) {
                var tr1 = $($(item).parent());
                var tr2 = $("tbody:eq(1)").find("tr:eq(" + index + ")");
                var val = tr1.find("td:eq(16)").text() * 1 + tr1.find("td:eq(20)").text() * 1
                        + tr2.find("td:eq(16)").text() * 1 + tr2.find("td:eq(20)").text() * 1;
                $(item).text(val.toFixed(2));
            });
        });
    </script>
}